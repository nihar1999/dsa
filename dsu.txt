#include<bits/stdc++.h>
using namespace std;
int s[500005],p[500005];
void make_set(int v)
{
    p[v]=v;
    s[v]=1;
}
int find_set(int v)
{
    if(v==p[v])
        return v;
    return p[v]=find_set(p[v]);
}
void u_set(int a,int b)
{
    a=find_set(a);
    b=find_set(b);
    if(a!=b){
        if(s[a]<s[b])
        swap(a,b);
        p[b]=a;
        s[a]+=s[b];
    }
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    int t=1;
    //cin>>t;
    while(t--)
    {
        int n,m;
        cin>>n>>m;
        for(int i=1;i<=n;i++)
            make_set(i);
        for(int i=0,s;i<m;i++)
        {
            cin>>s;
            for(int j=0,x,pre;j<s;j++)
            {
                cin>>x;
                if(j!=0)
                    u_set(x,pre);
                pre=x;
            }
        }
        for(int i=1;i<=n;i++)
        {
            int a = find_set(i);
            cout<<s[a]<<" ";
        }
    }
}
//277A
#include<bits/stdc++.h>
#define ll long long int
#define mod 100000000
#define pb push_back
#define mp make_pair
#define N 200005
using namespace std;
ll ans;
int s[N],p[N];
void make_set(int v)
{
    p[v] = v;
    s[v] = 1;
}
int find_set (int v)
{
    if(v==p[v])
        return v;
    return p[v]=find_set(p[v]);
}
void u_set(int a,int b)
{
    a=find_set(a);
    b=find_set(b);
    if(a!=b){
        if(s[a]<s[b])
            swap(a,b);
        p[b] = a;
        s[a]+=s[b];
    }
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    int n,m;
    cin>>n>>m;
    for(int i=1;i<=n;i++)
        make_set(i);
    for(int i=0;i<n;i++)
    {
        int si;
        cin>>si;
        for(int i=0,x,prev=0;i<si;i++)
        {
            cin>>x;
            if(i==0) prev = x;
            u_set(prev,x);
            prev = x;
        }
    }
    for(int i=1;i<=n;i++)
        cout<<s[i]<<" ";
    cout<<endl;
}

