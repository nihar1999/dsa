//node x kth parent in O(logn)
#include<bits/stdc++.h>
#define ll long long int
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define N 200005
using namespace std;
vector<int>adj[N];
int dp[N][25],n,vis[N];
void blift (int s,int par)
{
	for(int j=1;j<20;j++)
	{
		for(int i=1;i<=n;i++)
		{
			if(dp[i][j-1]!=-1)
			dp[i][j] = dp[dp[i][j-1]][j-1];
			else 
			dp[i][j] = -1;
		}
	}
}
void dfs (int s,int par)
{
	vis[s] = 1;
	dp[s][0] = par;
	for(int i=0;i<adj[s].size();i++)
	{
		if(vis[adj[s][i]]==0){
		dfs(adj[s][i],s);
		}
	}
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int q;
    cin>>n>>q;
    for(int i=2,x,y;i<=n;i++){
    	cin>>x;
    	adj[x].pb(i);
    	adj[i].pb(x);
    }
    for(int i=1;i<=n;i++)
	for(int j=0;j<20;j++)
	dp[i][j] = -1;
    dfs(1,-1);
    blift(1,0);
    
    while(q--)
    {
    	int x,k,f=0;
    	cin>>x>>k;
    	int ans = x;
    	for(int i=0;i<20;i++)
    	{
    		if(k & (1<<i)) 
    		{
    			ans = dp[ans][i];
    			if(ans==-1) {
    				f = 1;
    				break;
    			}
    		}
    	}
    	if(f==1){
    		cout<<"-1"<<endl;
    		continue;
    	}
    	else 
    	cout<<ans<<endl;
    }
}
