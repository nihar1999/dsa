#include<bits/stdc++.h>
using namespace std;
vector<char>prime(10000,true);
vector<int>adj[10000];
vector<int>a;
void sieve (int n)
{
    prime[0]=prime[1]=false;
    for(int i=2;i<=n;i++)
    {
        if(prime[i]&&i*i<=n)
        {
            for(long int j=i*i;j<=n;j+=i)
                prime[j]=false;
        }
    }
    for(int i=1000;i<10000;i++)
        if(prime[i]==true)
        a.push_back(i);
}
bool compare(int i,int j)
{
    int c=0;
    while(i)
    {
        if(i%10!=j%10)
        c++;
        i/=10;
        j/=10;
    }
    if(c==1) return true;
    else return false;
    //return (c==1) ? true : false;
}
int bfs (int s,int d)
{
    queue<int>q;
    vector<int>level(10000,0);
    vector<bool>vis(10000,false);
    q.push(s);
    vis[s]=true;
    level[s]=0;
    while(!q.empty())
    {
        int p=q.front();
        q.pop();
        for(int i=0;i<adj[p].size();i++)
        {
            int l = adj[p][i];
            if(l==false)
            {
                level[l]=level[p]+1;
                vis[l]=true;
                q.push(l);
            }
        }
    }
    return level[d];
}
int main()
{
    int t;
    cin>>t;
    sieve(9999);
    int len = a.size();
    for(int i=0;i<len;i++)
    {
        for(int j=i+1;i<len;i++)
        {
            if(compare(a[i],a[j])){
                adj[a[i]].push_back(a[j]);
                adj[a[j]].push_back(a[i]);
              }
        }
    }
    for(int i=0;i<10000;i++)
    {
        for(int j=0;j<adj[i].size();i++)
            cout<<i<<"-"<<j<<" ";
    }
    while(t--)
    {
        int n,m;
        cin>>n>>m;
        cout<<bfs(n,m)<<endl;
    }
}
